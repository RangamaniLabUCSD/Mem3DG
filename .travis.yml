notifications:
  email: false
  slack:
    secure: "qXwdryidmlwL5RcX3JoAL7BgCF4w/W0dJdmU5r3Bko6N31Xbv4YlFmFKKlh8BwpHidN2X4mBYHHI7vYvsKYr8iW45sSwIs0gYWZkiBtFGU5UpAv0aWT4ZzgEkN4TQ/8XImZcK57E4KFKu1l8bbJt7d0ZNNh0M/elrhrsw0oX/BQ725z5wvmpcaVm0g//Pk2ydk/yH8NwLK0R+t3NwPJ66pS4aBRxBP0qTTqvCzwHuqau0u1QmucdeQJaeg71SZdahYHTqtIfhn//sucxUPzZMRtJDweuCNB5SEeZZxLcpnshkFTa1NDmMMFwzJEIId1QAAoXLR4h6b2lmEfrmdWhbWz/mk0xbIEzhODgMGJRZb62boKiW8XLvdIJfSE9rAHcXRzuFHYaudDquah/WQ7zh5rLX3UMT00FD2XwWzeKclVtiPTfWkukVeWqhdpSMOhr9/bTIIoT1ns751AlyQGOa4sZkVEeUbhPPuTPF5jT9S+PwIhB9x84NZ7AwAxH09rUNgi0liqhNr5pQwtUyl0M2aZA3s1yZBKqVsc3ZBmQIIfEeOSSGZjxn58TxHgUw/28hUdrLUdiix213pKIYppQ+LUJeb3v+5kmIOBLproQkPkcEtLwN5+eYE81RAMG27sHnSDVhQVHb56fY4WR1tB2R1Lrmy3LzduQ9IIQ5ucWQz8="

language: cpp

dist: bionic

# Don't shallow clone as this may break the versioning
git:
  depth: false

branches:
  only:
  - master

# BUILD MATRIX
matrix:
  fast_finish: true
  allow_failures:
  - os: windows
  include:
  - os: windows
  # OSX
  - os: osx
    osx_image: xcode9.4
    addons:
      homebrew:
        packages: ['cmake', 'ninja', 'netcdf']
        update: true

  - os: osx
    osx_image: xcode10.3
    addons:
      homebrew:
        packages: ['cmake', 'ninja', 'netcdf']
        update: true

  - os: osx
    osx_image: xcode11.6
    addons:
      homebrew:
        packages: ['cmake', 'ninja', 'netcdf']

  - os: osx
    osx_image: xcode12
    addons:
      homebrew:
        packages: ['cmake', 'ninja', 'netcdf']


  # LINUX GCC
  # - os: linux
  #   compiler: gcc
  #   env: MATRIX_EVAL="CC=gcc-5 && CXX=g++-5"
  #   addons:
  #     apt:
  #       sources: ['ubuntu-toolchain-r-test']
  #       packages: ['g++-5', 'ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev']

  # - os: linux
  #   compiler: gcc
  #   env: MATRIX_EVAL="CC=gcc-6 && CXX=g++-6"
  #   addons:
  #     apt:
  #       sources: ['ubuntu-toolchain-r-test']
  #       packages: ['g++-6', 'ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    python: 3.7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-7', 'ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    python: 3.7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-8', 'ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev']

  - os: linux
    compiler: gcc
    env: MATRIX_EVAL="CC=gcc-9 && CXX=g++-9"
    python: 3.7
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: ['g++-9', 'ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev']

  # LINUX CLANG
  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CC=clang-7 && CXX=clang++-7"
    python: 3.7
    addons:
      apt:
        sources: ['llvm-toolchain-bionic-7']
        packages: ['clang-7', 'ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev']

  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CC=clang-8 && CXX=clang++-8"
    python: 3.7
    addons:
      apt:
        sources: ['llvm-toolchain-bionic-8']
        packages: ['clang-8', 'ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev']

  - os: linux
    compiler: clang
    env: MATRIX_EVAL="CC=clang-9 && CXX=clang++-9"
    python: 3.7
    addons:
      apt:
        sources: ['llvm-toolchain-bionic-9']
        packages: ['clang-9', 'ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev']


before_install:
- |
    if [ "$TRAVIS_OS_NAME" = "windows" ]; then
      cd ../..
      git clone https://github.com/microsoft/vcpkg 
      cd vcpkg
      bootstrap-vcpkg.bat
      vcpkg install netcdf-c:x64-windows netcdf-cxx4:x64-windows
      vcpkg integrate install
    fi
- if [[ "${MATRIX_EVAL}" != "" ]]; then eval ${MATRIX_EVAL}; fi

# Show OS/compiler version
- uname -a
- $CXX --version

install:
- mkdir build; cd build;
- |
    cd $TRAVIS_BUILD_DIR/Mem3DG
    if [ "$TRAVIS_OS_NAME" = "windows" ]; then
      cmake -DBUILD_PYMEM3DG=OFF -DSUITESPARSE=OFF -DWITH_NETCDF=ON -DCMAKE_TOOLCHAIN_FILE="../vcpkg/scripts/buildsystems/vcpkg.cmake" ..
    else
      cmake -DBUILD_PYMEM3DG=OFF -DSUITESPARSE=OFF -DWITH_NETCDF=ON -GNinja ..
    fi
- cmake --build . --config Release

script:
- ctest -C Release -V -j
