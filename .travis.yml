arch: amd64
os: linux
dist: focal

notifications:
  email: false
  slack:
    secure: "qXwdryidmlwL5RcX3JoAL7BgCF4w/W0dJdmU5r3Bko6N31Xbv4YlFmFKKlh8BwpHidN2X4mBYHHI7vYvsKYr8iW45sSwIs0gYWZkiBtFGU5UpAv0aWT4ZzgEkN4TQ/8XImZcK57E4KFKu1l8bbJt7d0ZNNh0M/elrhrsw0oX/BQ725z5wvmpcaVm0g//Pk2ydk/yH8NwLK0R+t3NwPJ66pS4aBRxBP0qTTqvCzwHuqau0u1QmucdeQJaeg71SZdahYHTqtIfhn//sucxUPzZMRtJDweuCNB5SEeZZxLcpnshkFTa1NDmMMFwzJEIId1QAAoXLR4h6b2lmEfrmdWhbWz/mk0xbIEzhODgMGJRZb62boKiW8XLvdIJfSE9rAHcXRzuFHYaudDquah/WQ7zh5rLX3UMT00FD2XwWzeKclVtiPTfWkukVeWqhdpSMOhr9/bTIIoT1ns751AlyQGOa4sZkVEeUbhPPuTPF5jT9S+PwIhB9x84NZ7AwAxH09rUNgi0liqhNr5pQwtUyl0M2aZA3s1yZBKqVsc3ZBmQIIfEeOSSGZjxn58TxHgUw/28hUdrLUdiix213pKIYppQ+LUJeb3v+5kmIOBLproQkPkcEtLwN5+eYE81RAMG27sHnSDVhQVHb56fY4WR1tB2R1Lrmy3LzduQ9IIQ5ucWQz8="

language: cpp

# Don't shallow clone as this may break the versioning
git:
  depth: false

env:
  global:
    - DEPS_DIR=${HOME}/deps

branches:
  only:
  - master
  - development
  - /^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$/

# BUILD MATRIX
jobs:
  fast_finish: true
  include:
  - stage: test 
    os: windows
    cache: 
      directories: 
        - ${DEPS_DIR}/vcpkg/installed
        - /c/Users/travis/AppData/Local/vcpkg/archives

  - stage: test 
    os: osx
    osx_image: xcode11.6
    addons:
      homebrew:
        packages: ['cmake', 'ninja', 'netcdf', 'eigen', 'pybind11']

  - os: osx
    osx_image: xcode12
    addons:
      homebrew:
        packages: ['cmake', 'ninja', 'netcdf', 'eigen', 'pybind11']

  - stage: test 
    os: linux
    dist: bionic
    compiler: gcc
    python: 3.6
    addons:
      apt:
        packages: ['ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev', 'libeigen3-dev', 'pybind11-dev']

  - stage: test
    os: linux
    dist: focal
    compiler: gcc
    python: 3.7
    addons:
      apt:
        packages: ['ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev', 'libeigen3-dev', 'pybind11-dev']

  - stage: deploy
    if: branch = master
    os: linux
    dist: focal
    compiler: gcc
    python: 3.7
    addons:
      apt:
        packages: ['ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev', 'libeigen3-dev', 'pybind11-dev', 'doxygen', 'graphviz']
    before_install: skip
    install: skip
    script:
      - |
        mkdir -p build && cd build;
        cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_PYMEM3DG=OFF -DSUITESPARSE=OFF -DWITH_NETCDF=ON -DBUILD_MEM3DG_DOCS=ON -GNinja ..;
        ninja mem3dg_docs;
    deploy: 
      provider: pages
      strategy: git
      local_dir: build/docs/html
      skip_cleanup: true
      token: $GITHUB_TOKEN
      keep_history: false
      on:
        branch: master
        repo: RangamaniLabUCSD/Mem3DG
  
  - stage: deploy
    if: branch =~ ^v?((\d+)(\.\d+)*)(-?(a|b|c|rc|alpha|beta)([0-9]+)?)?$
    os: linux
    dist: focal
    compiler: gcc
    python: 3.7
    addons:
      apt:
        packages: ['ninja-build', 'libnetcdf-dev', 'libnetcdf-c++4-dev', 'xorg-dev', 'libeigen3-dev', 'pybind11-dev', 'doxygen', 'graphviz']
    before_install: skip
    install: skip
    script:
      - python -m pip install scikit-build pytest
      - python setup.py sdist;
    deploy:
      provider: pypi
      username: "__token__"
      password:
        secure: "Mhu/KyVtx+3bPns2FcxnqqK+QTDWHPwkm0vVCwO3VhIZQR1h7XTiPqlmJDaSpNUHbj+9evvniXY3ShQMQdKjDJAq4dzdOHOfvkqk+HFlPs09Uc6R+QqiwwYVjgLsRukeacCmfJiDCVcDOOPmJTUjnXHsvEe+qmaYl60n6EPxMIAjEa0o7J5Yag31amfqLOGBzRVfU7JBQ5GUQtPfUGsCHZvtIKkuwxzYkOSnOw8i7X/UCyMN6MLmgg6DrN6UN/6eZVCXJLFahPHqof1k6OSUt49EjyCTLX97AEeVU2H7gc8NwJP1nOGZ1CjN3u0+gjjtZV98AS7Yb2psnUsyOOrfVydxYQqnUD0qwU0y/vcB0AmzT06G0hJiekC+QOux1zBHgUHYf6RNOOKuOegwQF2BMfmbl9C6E4WtLO/RGLqPJNsvC9z6T16NU2GqzRIgQ9+NuntpAWW5z7cmi1vojkvQjZ81VfXxzgI+QwPVEKpv8/SREtPN8jKOu/k63U8IWa+SHTX+DxAwjM/1LYQGw4XoV0k6x/W56xr5fw/kvHRdwOwQFEaySFQ1/tMy1H58DPAXguThBj6UbT3bOhJnyKikmLXCWprQ8YptbWppxkCCbg0pQTVYBfj6Ua5q7rrQT0vO8uG9/Utl4wKJc9qE+z9JH33venPC/tn+XtuCp4lcShs="
      skip_cleanup: true
      skip_existing: true
      distributions: "sdist"
      on:
        tags: true
        repo: RangamaniLabUCSD/Mem3DG
       
        
before_install:
- if [[ "${MATRIX_EVAL}" != "" ]]; then eval ${MATRIX_EVAL}; fi
- |
    if [ "$TRAVIS_OS_NAME" = "windows" ]; then
      mkdir -p ${DEPS_DIR}/vcpkg
      pushd ${DEPS_DIR}/vcpkg
      git init
      git remote add origin https://github.com/microsoft/vcpkg 
      git fetch origin master
      git checkout -b master origin/master
      ./bootstrap-vcpkg.bat
      ./vcpkg install netcdf-c:x64-windows netcdf-cxx4:x64-windows eigen3:x64-windows
      popd
    fi

# Show OS/compiler version
- uname -a
- $CXX --version

install:
- mkdir -p build && cd build;
- |
    if [ "$TRAVIS_OS_NAME" = "windows" ]; then
      cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_PYMEM3DG=OFF -DSUITESPARSE=OFF -DWITH_NETCDF=ON -DCMAKE_TOOLCHAIN_FILE="${DEPS_DIR}/vcpkg/scripts/buildsystems/vcpkg.cmake" -G "Visual Studio 15 2017 Win64" ..
    else
      cmake -DCMAKE_BUILD_TYPE=RELEASE -DBUILD_PYMEM3DG=OFF -DSUITESPARSE=OFF -DWITH_NETCDF=ON -GNinja ..
    fi
- cmake --build . --config Release

script:
- ctest -C Release -V -j
